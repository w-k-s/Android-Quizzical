apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'

// Read secret.properties located in project root
def secretPropertiesFile = rootProject.file("secret.properties");
def secretProperties = new Properties()
secretProperties.load(new FileInputStream(secretPropertiesFile))

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'

    defaultConfig {
        applicationId "com.asfour.quizzical"
        minSdkVersion 19
        targetSdkVersion 28
        vectorDrawables.useSupportLibrary = true
        manifestPlaceholders = [ fabricApiKey:secretProperties['fabricApiKey']]
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'

        }
    }
}

androidExtensions {
    experimental = true
}

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$rootProject.ext.coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$rootProject.ext.coroutinesVersion"

    implementation "com.facebook.stetho:stetho:$rootProject.ext.stethoVersion"

    implementation "com.google.firebase:firebase-core:$rootProject.ext.firebaseCoreVersion"
    implementation "com.crashlytics.sdk.android:crashlytics:$rootProject.ext.crashlyticsVersion"

    implementation "com.android.support:support-annotations:$rootProject.ext.supportVersion"
    implementation("com.android.support:recyclerview-v7:$rootProject.ext.supportVersion"){
        exclude module: 'com.android.support', group: 'animated-vector-drawable'
    }
    implementation("com.android.support:appcompat-v7:$rootProject.ext.supportVersion"){
        exclude module: 'com.android.support', group: 'animated-vector-drawable'
    }

    implementation "android.arch.persistence.room:runtime:$rootProject.roomVersion"
    kapt "android.arch.persistence.room:compiler:$rootProject.roomVersion"

    implementation "android.arch.lifecycle:extensions:$rootProject.archLifecycleVersion"
    kapt "android.arch.lifecycle:compiler:$rootProject.archLifecycleVersion"

    implementation "com.google.code.gson:gson:$rootProject.ext.gsonVersion"

    implementation "com.squareup.retrofit2:retrofit:$rootProject.ext.retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.ext.retrofitVersion"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$rootProject.ext.retrofitCoroutinesVersion"

    implementation "com.squareup.okhttp3:okhttp:$rootProject.ext.okhttpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.ext.okhttpVersion"

    // Koin for Android
    implementation "org.koin:koin-android:$rootProject.ext.koinVersion"
    // Android Scope feature
    implementation "org.koin:koin-android-scope:$rootProject.ext.koinVersion"

    // Android Architecture ViewModel feature
    implementation "org.koin:koin-android-viewmodel:$rootProject.ext.koinVersion"

    testImplementation('org.powermock:powermock-api-mockito:1.6.2') {
        exclude module: 'hamcrest-core'
        exclude module: 'objenesis'
    }
    testImplementation('org.powermock:powermock-module-junit4:1.6.2') {
        exclude module: 'hamcrest-core'
        exclude module: 'objenesis'
    }
    testImplementation 'junit:junit:4.12'
    testImplementation "org.mockito:mockito-core:$rootProject.ext.mockitoVersion"
    testImplementation("com.android.support:support-v4:$rootProject.ext.supportVersion"){
        exclude module: 'com.android.support', group: 'animated-vector-drawable'
    }
}

apply plugin: 'com.google.gms.google-services'